<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Strawberry Pi üçë</title><link>https://ese519-strawberrypi.github.io/</link><description>Recent content in Home on Strawberry Pi üçë</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 Feb 2018 15:37:57 +0700</lastBuildDate><atom:link href="https://ese519-strawberrypi.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Fall Plaza</title><link>https://ese519-strawberrypi.github.io/design/fall-plaza/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/design/fall-plaza/</guid><description>Agitabitur signa lympha; non lacunae, mox cum tumulis quoque triste dictis. Ignibus inpatiens explorat, te tegens ferro nocere haud, et Dulichium tui male! Quo sed fuit flexit et hic die solido, gloria?
Locus evicit loquuntur Tyrrhena omnes, obstipui pugnabant temptavit Phoco vati dabant deus. Memorata haberet sepulcrales gentisque dum sic, in flumina templa! Se domus passa verum tenebrisque auras nil vix quae quidem, certe videri somnus esse iam feres mortis Plurima.</description></item><item><title>Free Playing</title><link>https://ese519-strawberrypi.github.io/features/free-play/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/features/free-play/</guid><description>Click the C button in the panel to enter the Free Play Mode. Click the A to record the free-play music in flash memory.
Users can enter the Free Play Mode, click some buttons, and play some music notes. Users may first press the C button on the keypad and wait for the reaction of the LCD display. After about one second, the main page disappeared, and users could press the number from 1 to 7 to emit the sound of music notes from Do to Ti.</description></item><item><title>PWM Signal Noise</title><link>https://ese519-strawberrypi.github.io/qa/fall-plaza/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/qa/fall-plaza/</guid><description>Using an additional electric capacity to filter high frequency noise.
We could generate the sounds and send them to the speaker by utilizing the PWM PIO module. We found some apparent loss in the sound quality when listening to the speaker after the amplifier. By using the oscilloscope in Detkin Lab, we find out there is a very obvious overshooting at the beginning of each PWM signal period.
For both methods we deployed here, i.</description></item><item><title>Modern Hospital</title><link>https://ese519-strawberrypi.github.io/design/modern-hospital/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/design/modern-hospital/</guid><description>Agitabitur signa lympha; non lacunae, mox cum tumulis quoque triste dictis. Ignibus inpatiens explorat, te tegens ferro nocere haud, et Dulichium tui male! Quo sed fuit flexit et hic die solido, gloria?
Locus evicit loquuntur Tyrrhena omnes, obstipui pugnabant temptavit Phoco vati dabant deus. Memorata haberet sepulcrales gentisque dum sic, in flumina templa! Se domus passa verum tenebrisque auras nil vix quae quidem, certe videri somnus esse iam feres mortis Plurima.</description></item><item><title>Storage Interrupt</title><link>https://ese519-strawberrypi.github.io/qa/modern-hospital/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/qa/modern-hospital/</guid><description>Calling additional API save_and_disable_interrupts and restore_interrupts to disable interrupts and recover them.
When trying to store data in flash memory, we found out that after erasing the flash memory for a certain address range, we are still unable to write it. After checking the Internet, we found out that the interrupts from other read or write requests from the program between these two commands may make the saving or loading data impassible to finish or complete correctly.</description></item><item><title>Cargo Terminal</title><link>https://ese519-strawberrypi.github.io/design/cargo-terminal/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/design/cargo-terminal/</guid><description>Agitabitur signa lympha; non lacunae, mox cum tumulis quoque triste dictis. Ignibus inpatiens explorat, te tegens ferro nocere haud, et Dulichium tui male! Quo sed fuit flexit et hic die solido, gloria?
Locus evicit loquuntur Tyrrhena omnes, obstipui pugnabant temptavit Phoco vati dabant deus. Memorata haberet sepulcrales gentisque dum sic, in flumina templa! Se domus passa verum tenebrisque auras nil vix quae quidem, certe videri somnus esse iam feres mortis Plurima.</description></item><item><title>Pressing Sample</title><link>https://ese519-strawberrypi.github.io/qa/cargo-terminal/</link><pubDate>Sun, 18 Nov 2018 12:33:46 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/qa/cargo-terminal/</guid><description>How to sample the pressing of gamers, whether in the music game mode or digital instrument mode, is a big problem.
In the initial version of our project, we used the keyboard as input and used the getchar_timeout_us function in pico/stdio.h . The timeout period would be used as the sample period. After switching from the keyboard to the keypad, we had to redesign the sampling method since no input function is built into the SDK for us to deploy for the keypad directly.</description></item><item><title>Highlight</title><link>https://ese519-strawberrypi.github.io/highlight/</link><pubDate>Thu, 06 Dec 2018 09:29:16 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/highlight/</guid><description/></item><item><title>History</title><link>https://ese519-strawberrypi.github.io/history/</link><pubDate>Thu, 06 Dec 2018 09:29:16 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/history/</guid><description>About Heading Theres no limits, Lorem ipsum dolor sit amet, et essent mediocritatem quo, choro volumus oporteat an mei. Numquam dolores mel eu, mea docendi omittantur et, mea ea duis erat. Elit melius cu ius. Per ex novum tantas putant, ei his nullam aliquam apeirian. Aeterno quaestio constituto sea an, no eum intellegat assueverit.</description></item><item><title>Predefined Playing</title><link>https://ese519-strawberrypi.github.io/features/predefined-play/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/features/predefined-play/</guid><description>Click the B button in the panel to enter the Predefined Music Playing Mode. Click the D button in the panel to enter the Replay Mode.
Users may want to play the predefined music stored on the device. If so, users may first press B to enter Predefined Music Mode. After the display changes, the user can hear the predefined music playing several times. To exit the Predefined Music Mode, the user could press # when the music stops.</description></item><item><title>Game Mode</title><link>https://ese519-strawberrypi.github.io/features/game-mode/</link><pubDate>Wed, 28 Nov 2018 15:15:26 +1000</pubDate><guid>https://ese519-strawberrypi.github.io/features/game-mode/</guid><description>Click the * button in the panel to enter the Game Mode. Click the # button in the panel to exit the game.
Users may want to play the music game on the device. If so, users may first press * to enter the Game Mode. The LCD display will change and show the game page. The user could see the green brick falls down with different x positions. If the user clicks the button before the brick crosses the white line, the brick becomes red, meaning a failure.</description></item></channel></rss>